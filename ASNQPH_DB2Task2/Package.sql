CREATE OR REPLACE PACKAGE PCKG_KONYVEK IS 
    PROCEDURE FELVISZKONYV(ID IN konyvek.kid%TYPE,AR IN konyvek.ar%TYPE, CIM IN KONYVEK.cim%TYPE, KATEGORIA IN konyvek.kategoria%TYPE, SZERZO IN konyvek.szerzo%TYPE, KIADOID IN konyvek.kiadoid%TYPE);
    PROCEDURE MODOSITKONYV(ID INT ,PRICE INT);
    PROCEDURE TOROLKONYV(ID INT);
    FUNCTION KONYV_BY_AR(PRICE IN NUMBER) RETURN NUMBER;
    FUNCTION GET_AVG_PRICE RETURN NUMBER;
END PCKG_KONYVEK;

CREATE OR REPLACE PACKAGE BODY PCKG_KONYVEK IS 

PROCEDURE FELVISZKONYV(ID IN konyvek.kid%TYPE,AR IN konyvek.ar%TYPE, CIM IN KONYVEK.cim%TYPE, KATEGORIA IN konyvek.kategoria%TYPE, SZERZO IN konyvek.szerzo%TYPE, KIADOID IN konyvek.kiadoid%TYPE)
IS EXSISTERROR EXCEPTION;
rows_found number;

BEGIN
    SELECT COUNT(*) INTO ROWS_FOUND FROM KONYVEK WHERE KID= ID;
    
    IF ROWS_FOUND != 0 THEN RAISE EXSISTERROR;
    ELSE
        INSERT INTO KONYVEK VALUES(ID,AR,CIM,KATEGORIA,SZERZO,KIADOID);
    END IF;
EXCEPTION
    WHEN exsisterror THEN
    dbms_output.put_line('Ez az azonosító már létezik!');
END;

PROCEDURE MODOSITKONYV(ID INT ,PRICE INT) IS
NOTEXSISTERROR EXCEPTION;
PRICEISNOTVALID EXCEPTION;
ROWS_FOUND NUMBER;

BEGIN

    SELECT COUNT(*) INTO ROWS_FOUND FROM KONYVEK WHERE KID= KID;
			IF ROWS_FOUND = 0 THEN RAISE NOTEXSISTERROR;
			ELSIF 
                 PRICE < 1 THEN RAISE PRICEISNOTVALID;
			ELSE
				UPDATE KONYVEK SET AR = PRICE WHERE KID = ID;
			END IF;
		EXCEPTION
			WHEN NOTEXSISTERROR THEN
			DBMS_OUTPUT.PUT_LINE('ILYEN AZONOSÍTÓJÚ TERMÉK NEM LÉTEZIK!');
			WHEN PRICEISNOTVALID THEN
            DBMS_OUTPUT.PUT_LINE('A MEGADOTT ÁR NEM MEGFELEL?!');
END;

PROCEDURE TOROLKONYV(ID INT) IS
NOTEXSISTERROR EXCEPTION;
rows_found number;

BEGIN
   SELECT COUNT(*) INTO ROWS_FOUND FROM KONYVEK WHERE KID= ID;
    
    IF ROWS_FOUND = 0 THEN RAISE NOTEXSISTERROR;
    ELSE
        DELETE FROM KONYVEK WHERE KID = ID;
    END IF;
    EXCEPTION
			WHEN NOTEXSISTERROR THEN
			DBMS_OUTPUT.PUT_LINE('ILYEN AZONOSÍTÓJÚ TERMÉK NEM LÉTEZIK!');
END;

FUNCTION KONYV_BY_AR(PRICE NUMBER) RETURN NUMBER IS EREDMENY NUMBER;
    
    BEGIN
        SELECT SUM(AR) INTO EREDMENY FROM KONYVEK WHERE AR > PRICE;
        RETURN EREDMENY;
    END;
    
FUNCTION GET_AVG_PRICE RETURN NUMBER IS AVG_KONYVEK NUMBER;
    
    BEGIN
        SELECT AVG(AR) INTO AVG_KONYVEK FROM KONYVEK;
        RETURN AVG_KONYVEK;
    END;
END;

SELECT PCKG_KONYVEK.GET_AVG_PRICE FROM DUAL;
SELECT PCKG_KONYVEK.KONYV_BY_AR(500) FROM DUAL;
